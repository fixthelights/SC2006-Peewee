"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrawingContext = void 0;
exports.DrawingProvider = DrawingProvider;
exports.SVGContext = void 0;
var React = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _useChartDimensions = _interopRequireDefault(require("../hooks/useChartDimensions"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * Defines the area in which it is possible to draw the charts.
 */

const DrawingContext = exports.DrawingContext = /*#__PURE__*/React.createContext({
  top: 0,
  left: 0,
  bottom: 0,
  right: 0,
  height: 300,
  width: 400
});
const SVGContext = exports.SVGContext = /*#__PURE__*/React.createContext({
  current: null
});
function DrawingProvider({
  width,
  height,
  margin,
  svgRef,
  children
}) {
  const drawingArea = (0, _useChartDimensions.default)(width, height, margin);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(SVGContext.Provider, {
    value: svgRef,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(DrawingContext.Provider, {
      value: drawingArea,
      children: children
    })
  });
}
process.env.NODE_ENV !== "production" ? DrawingProvider.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "yarn proptypes"  |
  // ----------------------------------------------------------------------
  children: _propTypes.default.node,
  height: _propTypes.default.number.isRequired,
  margin: _propTypes.default.shape({
    bottom: _propTypes.default.number,
    left: _propTypes.default.number,
    right: _propTypes.default.number,
    top: _propTypes.default.number
  }),
  svgRef: _propTypes.default.shape({
    current: _propTypes.default.object
  }).isRequired,
  width: _propTypes.default.number.isRequired
} : void 0;