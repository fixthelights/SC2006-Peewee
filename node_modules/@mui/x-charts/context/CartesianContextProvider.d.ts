import * as React from 'react';
import { AxisConfig, AxisDefaultized } from '../models/axis';
import { DEFAULT_X_AXIS_KEY } from '../constants';
import { DatasetType } from '../models/seriesType/config';
import { MakeOptional } from '../models/helpers';
export type CartesianContextProviderProps = {
    xAxis?: MakeOptional<AxisConfig, 'id'>[];
    yAxis?: MakeOptional<AxisConfig, 'id'>[];
    dataset?: DatasetType;
    children: React.ReactNode;
};
type DefaultizedAxisConfig = {
    [axisKey: string]: AxisDefaultized;
};
export declare const CartesianContext: React.Context<{
    /**
     * Mapping from axis key to scaling function
     */
    xAxis: {
        DEFAULT_X_AXIS_KEY: AxisDefaultized;
    } & DefaultizedAxisConfig;
    yAxis: {
        DEFAULT_X_AXIS_KEY: AxisDefaultized;
    } & DefaultizedAxisConfig;
    xAxisIds: string[];
    yAxisIds: string[];
}>;
declare function CartesianContextProvider({ xAxis: inXAxis, yAxis: inYAxis, dataset, children, }: CartesianContextProviderProps): React.JSX.Element;
declare namespace CartesianContextProvider {
    var propTypes: any;
}
export { CartesianContextProvider };
