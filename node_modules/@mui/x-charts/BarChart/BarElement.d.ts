import * as React from 'react';
import { SlotComponentProps } from '@mui/base/utils';
import { HighlightScope } from '../context/HighlightProvider';
export interface BarElementClasses {
    /** Styles applied to the root element. */
    root: string;
}
export type BarElementClassKey = keyof BarElementClasses;
export interface BarElementOwnerState {
    id: string;
    dataIndex: number;
    color: string;
    isFaded: boolean;
    isHighlighted: boolean;
    classes?: Partial<BarElementClasses>;
}
export declare function getBarElementUtilityClass(slot: string): string;
export declare const lineElementClasses: BarElementClasses;
export declare const BarElementPath: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material/styles").Theme> & {
    ownerState: BarElementOwnerState;
}, Pick<React.SVGProps<SVGRectElement>, keyof React.SVGProps<SVGRectElement>>, {}>;
export type BarElementProps = Omit<BarElementOwnerState, 'isFaded' | 'isHighlighted'> & React.ComponentPropsWithoutRef<'path'> & {
    highlightScope?: Partial<HighlightScope>;
    /**
     * The props used for each component slot.
     * @default {}
     */
    slotProps?: {
        bar?: SlotComponentProps<'path', {}, BarElementOwnerState>;
    };
    /**
     * Overridable component slots.
     * @default {}
     */
    slots?: {
        /**
         * The component that renders the root.
         * @default BarElementPath
         */
        bar?: React.ElementType;
    };
};
export declare function BarElement(props: BarElementProps): React.JSX.Element;
