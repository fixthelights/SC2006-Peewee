import * as React from 'react';
import { PieArcDatum as D3PieArcDatum } from 'd3-shape';
import { HighlightScope } from '../context/HighlightProvider';
import { PieSeriesType } from '../models/seriesType/pie';
export interface PieArcClasses {
    /** Styles applied to the root element. */
    root: string;
    /** Styles applied to the root element when higlighted. */
    highlighted: string;
    /** Styles applied to the root element when faded. */
    faded: string;
}
export type PieArcClassKey = keyof PieArcClasses;
interface PieArcOwnerState {
    id: string;
    dataIndex: number;
    color: string;
    isFaded: boolean;
    isHighlighted: boolean;
    classes?: Partial<PieArcClasses>;
}
export declare function getPieArcUtilityClass(slot: string): string;
export declare const pieArcClasses: PieArcClasses;
export type PieArcProps = Omit<PieArcOwnerState, 'isFaded' | 'isHighlighted'> & React.ComponentPropsWithoutRef<'path'> & D3PieArcDatum<any> & {
    highlightScope?: Partial<HighlightScope>;
    innerRadius: PieSeriesType['innerRadius'];
    outerRadius: number;
    cornerRadius: PieSeriesType['cornerRadius'];
    highlighted: PieSeriesType['highlighted'];
    faded: PieSeriesType['faded'];
    onClick?: (event: React.MouseEvent<SVGPathElement, MouseEvent>) => void;
};
declare function PieArc(props: PieArcProps): React.JSX.Element;
declare namespace PieArc {
    var propTypes: any;
}
export default PieArc;
