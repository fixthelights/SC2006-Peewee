import * as React from 'react';
import { PieArcDatum as D3PieArcDatum } from 'd3-shape';
import { HighlightScope } from '../context/HighlightProvider';
import { PieSeriesType } from '../models/seriesType/pie';
export interface PieArcLabelClasses {
    /** Styles applied to the root element. */
    root: string;
    /** Styles applied to the root element when higlighted. */
    highlighted: string;
    /** Styles applied to the root element when faded. */
    faded: string;
}
export type PieArcLabelClassKey = keyof PieArcLabelClasses;
interface PieArcLabelOwnerState {
    id: string;
    dataIndex: number;
    color: string;
    isFaded: boolean;
    isHighlighted: boolean;
    classes?: Partial<PieArcLabelClasses>;
}
export declare function getPieArcLabelUtilityClass(slot: string): string;
export declare const pieArcLabelClasses: PieArcLabelClasses;
export type PieArcLabelProps = Omit<PieArcLabelOwnerState, 'isFaded' | 'isHighlighted'> & React.ComponentPropsWithoutRef<'path'> & D3PieArcDatum<any> & {
    highlightScope?: Partial<HighlightScope>;
    innerRadius: PieSeriesType['innerRadius'];
    outerRadius: number;
    cornerRadius: PieSeriesType['cornerRadius'];
} & {
    formattedArcLabel?: string | null;
};
declare function PieArcLabel(props: PieArcLabelProps): React.JSX.Element;
declare namespace PieArcLabel {
    var propTypes: any;
}
export default PieArcLabel;
