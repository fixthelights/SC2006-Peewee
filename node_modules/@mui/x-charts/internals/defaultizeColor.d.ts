import { AllSeriesType } from '../models/seriesType';
export declare function defaultizeColor(series: AllSeriesType, seriesIndex: number, colors?: string[]): {
    data: {
        color: string;
        label?: string | undefined;
        value: number;
        id?: string | number | undefined;
    }[];
    type: "pie";
    innerRadius?: number | undefined;
    outerRadius?: number | undefined;
    cornerRadius?: number | undefined;
    startAngle?: number | undefined;
    endAngle?: number | undefined;
    paddingAngle?: number | undefined;
    sortingValues?: import("../models/seriesType").ChartsPieSorting | undefined;
    arcLabel?: "label" | "value" | "formattedValue" | ((item: import("../models/seriesType").DefaultizedPieValueType) => string) | undefined;
    arcLabelMinAngle?: number | undefined;
    cx?: number | undefined;
    cy?: number | undefined;
    highlighted?: {
        additionalRadius?: number | undefined;
        innerRadius?: number | undefined;
        outerRadius?: number | undefined;
        cornerRadius?: number | undefined;
    } | undefined;
    faded?: {
        additionalRadius?: number | undefined;
        innerRadius?: number | undefined;
        outerRadius?: number | undefined;
        cornerRadius?: number | undefined;
    } | undefined;
    id?: string | undefined;
    color?: string | undefined;
    valueFormatter?: ((value: import("../models/helpers").MakeOptional<import("../models/seriesType").PieValueType, "id">) => string) | undefined;
    highlightScope?: Partial<import("..").HighlightScope> | undefined;
} | {
    type: "bar";
    data?: number[] | undefined;
    dataKey?: string | undefined;
    label?: string | undefined;
    layout?: "horizontal" | "vertical" | undefined;
    id?: string | undefined;
    color: string;
    valueFormatter?: ((value: number) => string) | undefined;
    highlightScope?: Partial<import("..").HighlightScope> | undefined;
    xAxisKey?: string | undefined;
    yAxisKey?: string | undefined;
    stack?: string | undefined;
    stackOffset?: "none" | "expand" | "diverging" | "silhouette" | "wiggle" | undefined;
    stackOrder?: "reverse" | "none" | "appearance" | "ascending" | "descending" | "insideOut" | undefined;
} | {
    type: "line";
    data?: number[] | undefined;
    dataKey?: string | undefined;
    stack?: string | undefined;
    area?: boolean | undefined;
    label?: string | undefined;
    curve?: import("../models/seriesType").CurveType | undefined;
    showMark?: boolean | ((params: import("../models/seriesType").ShowMarkParams) => boolean) | undefined;
    disableHighlight?: boolean | undefined;
    id?: string | undefined;
    color: string;
    valueFormatter?: ((value: number) => string) | undefined;
    highlightScope?: Partial<import("..").HighlightScope> | undefined;
    xAxisKey?: string | undefined;
    yAxisKey?: string | undefined;
    stackOffset?: "none" | "expand" | "diverging" | "silhouette" | "wiggle" | undefined;
    stackOrder?: "reverse" | "none" | "appearance" | "ascending" | "descending" | "insideOut" | undefined;
} | {
    type: "scatter";
    data: import("../models/seriesType").ScatterValueType[];
    markerSize?: number | undefined;
    label?: string | undefined;
    id?: string | undefined;
    color: string;
    valueFormatter?: ((value: import("../models/seriesType").ScatterValueType) => string) | undefined;
    highlightScope?: Partial<import("..").HighlightScope> | undefined;
    xAxisKey?: string | undefined;
    yAxisKey?: string | undefined;
};
