import * as React from 'react';
interface GetWordsByLinesParams {
    /**
     * Text displayed.
     */
    text: string;
    /**
     * Style applied to text elements.
     */
    style?: React.SVGAttributes<'text'>['style'];
    /**
     * If true, the line width is computed.
     * @default false
     */
    needsComputation?: boolean;
}
export type ChartsTextBaseline = 'hanging' | 'central' | 'auto';
export interface ChartsTextProps extends Omit<React.SVGTextElementAttributes<SVGTextElement>, 'width' | 'ref'>, GetWordsByLinesParams {
    /**
     * Height of a text line (in `em`).
     */
    lineHeight?: number;
    /**
     * The text baseline
     * @default 'central'
     */
    dominantBaseline?: ChartsTextBaseline;
    ownerState?: any;
}
export declare function getWordsByLines({ style, needsComputation, text }: GetWordsByLinesParams): any[];
export declare function ChartsText(props: ChartsTextProps): React.JSX.Element;
export {};
