import { Series } from 'd3-shape';
import { BarSeriesType, LineSeriesType } from '../models/seriesType';
type StackableSeries = {
    [id: string]: BarSeriesType;
} | {
    [id: string]: LineSeriesType;
};
type FormatterParams = {
    series: StackableSeries;
    seriesOrder: string[];
};
export type StackingGroupsType = {
    ids: string[];
    stackingOrder: (series: Series<any, any>) => number[];
    stackingOffset: (series: Series<any, any>, order: Iterable<number>) => void;
}[];
export declare const StackOrder: {
    [key in 'appearance' | 'ascending' | 'descending' | 'insideOut' | 'none' | 'reverse']: (series: Series<any, any>) => number[];
};
export declare const StackOffset: {
    [key in 'expand' | 'diverging' | 'none' | 'silhouette' | 'wiggle']: (series: Series<any, any>, order: Iterable<number>) => void;
};
/**
 * Takes a set of series and groups their ids
 * @param series the object of all bars series
 * @returns an array of groups, including the ids, the stacking order, and the stacking offset.
 */
export declare const getStackingGroups: (params: FormatterParams) => StackingGroupsType;
export {};
